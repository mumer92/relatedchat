name: Deploy related:chat
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy_production_web_app:
    if: github.ref == 'refs/heads/main'
    name: Build and deploy production web app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build
        run: npm ci && npm run build
        env:
          CI: false
          GENERATE_SOURCEMAP: false
          NODE_OPTIONS: --max-old-space-size=4096
          REACT_APP_API_URL: https://us-central1-${{ secrets.FIREBASE_PROJECT_ID }}.cloudfunctions.net/api
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.GCP_SA_KEY }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
          entryPoint: ./web
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

  build_and_deploy_production_backend:
    if: github.ref == 'refs/heads/main'
    name: Build and deploy production backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cloud
    env:
      SA_JSON: ${{ secrets.GCP_SA_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('cloud/functions/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Encode service account in base64
        run: |
          echo 'sa_enc<<EOF' >> $GITHUB_ENV
          echo $SA_JSON | base64 >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Install npm packages
        run: cd functions && npm install --production=false && cd ..
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --force
        env:
          GCP_SA_KEY: ${{ env.sa_enc }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          PROJECT_PATH: ./cloud
